image: "quay.io/podman/testing"

before_script:
  - podman --version

stages:
  - Static analysis
  - Compiles
  - Publish latest to quay

rustfmt:
  stage: Static analysis
  script:
    - curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain nightly -y
    - source $HOME/.cargo/env
    - cargo fmt -- --check

compile-amd64:
  stage: Compiles
  script:
    - podman build --runtime crun --storage-driver vfs -t okapi:amd64 .
    - if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ] && [ "$QUAY_USERNAME" != "" ] && [ "$QUAY_PASSWORD" != "" ]; then
        podman --storage-driver vfs login quay.io --username $QUAY_USERNAME --password $QUAY_PASSWORD &&
        podman --storage-driver vfs push okapi:amd64 quay.io/$QUAY_USERNAME/okapi:amd64;
      fi

compile-arm64:
  stage: Compiles
  script:
    - podman build --runtime crun --storage-driver vfs --arch arm64
        --build-arg RUST_TARGET="aarch64-unknown-linux-musl"
        --build-arg MUSL_TARGET="aarch64-linux-musl"
        -t okapi:arm64 .
    - if [ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ] && [ "$QUAY_USERNAME" != "" ] && [ "$QUAY_PASSWORD" != "" ]; then
        podman --storage-driver vfs login quay.io --username $QUAY_USERNAME --password $QUAY_PASSWORD &&
        podman --storage-driver vfs push okapi:arm64 quay.io/$QUAY_USERNAME/okapi:arm64;
      fi

publish-latest:
  stage: Publish latest to quay
  only:
    - current@Adrian/okapi-rewrite
  script:
    - podman --storage-driver vfs login quay.io --username $QUAY_USERNAME --password $QUAY_PASSWORD
    - podman --storage-driver vfs manifest create okapi:latest
    - podman --storage-driver vfs pull quay.io/$QUAY_USERNAME/okapi:arm64
    - podman --storage-driver vfs pull quay.io/$QUAY_USERNAME/okapi:amd64
    - podman --storage-driver vfs manifest add okapi:latest quay.io/$QUAY_USERNAME/okapi:amd64
    - podman --storage-driver vfs manifest add okapi:latest quay.io/$QUAY_USERNAME/okapi:arm64
    - podman --storage-driver vfs manifest push okapi:latest docker://quay.io/$QUAY_USERNAME/okapi:latest
