FROM docker.io/library/alpine:edge AS builder

WORKDIR /build

RUN apk add --no-cache clang lld curl musl-dev gcc g++ && \
    curl -sSf https://sh.rustup.rs | sh -s -- --profile minimal --default-toolchain nightly -y

COPY . .

ENV CC clang
ENV CXX clang++
ENV CPATH :/usr/lib/gcc/x86_64-alpine-linux-musl/10.2.0/:/usr/lib/
ENV CPLUS_INCLUDE_PATH :/usr/include/c++/10.2.0/:/usr/include/c++/10.2.0/x86_64-alpine-linux-musl/

RUN source $HOME/.cargo/env && \
    rm /usr/bin/ld && \
    rm /usr/bin/cc && \
    ln -s /usr/bin/lld /usr/bin/ld && \
    ln -s /usr/bin/clang /usr/bin/cc && \
    cargo build

FROM docker.io/library/alpine:edge

WORKDIR /okapi

COPY --from=builder /build/target/debug/okapi /usr/bin/
COPY assets /okapi/assets

CMD /usr/bin/okapi
